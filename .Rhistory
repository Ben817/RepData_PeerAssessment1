mtcar
load mtcars
mtcars
install.packages("ggplot2")
install.packages("data.table")
library(ggplot2)
mtcars
qplot(mpg,cyl,data=mtcars,geom=scatter,facets=.~cyl,color=wt)
qplot(mpg,cyl,data=mtcars,geom=jitter,facets=.~cyl,color=wt)
qplot(mpg,hp,data=mtcars,geom=jitter,facets=.~cyl,color=wt)
qplot(mpg,hp,data=mtcars,geom=(jitter),facets=.~cyl,color=wt)
qplot(mpg,hp,data=mtcars,geom="jitter",facets=.~cyl,color=wt)
qplot(mpg,hp,data=mtcars,geom="jitter",facets=.~cyl,color=factor(wt))
qplot(mpg,hp,data=mtcars,geom="jitter",facets=.~cyl,size=factor(wt))
colnames(diamonds)
library(data.table)
library(ggplot2)
library(reshape)
library(reshape2)
library(scales)
library(randomForest)
french = function(x) format(x, big.mark = " ")
##### prediction analys ##########
load(file="/Users/Benny/Documents/Diverse/R_projects/Scraping_KVD/total_database.RData")
#tot_temp <- total[total$Brand=="Volvo",]
tot_temp <- total[total$Model=="V70_II",]
nrow(tot_temp)
#tot_temp <- tot_temp[tot_temp$Engine=="2.5FT",]
tot_temp <- tot_temp[tot_temp$objnr!="608432",] #ta bort en outlier (ett reparations objekt)
tot_temp <- tot_temp[tot_temp$objnr!="604406",]#ta bort en outlier (ett reparations objekt)
nrow(tot_temp)
#tot_temp <- tot_temp[tot_temp$Engine=="2.5FT",]
#### Clean indata ####
source(file="/Users/Benny/Documents/Diverse/R_projects/Scraping_KVD/tabort_dubbletter.R")
tot_temp<-tabort_dubbletter(tot_temp)
#a<-acast(total_temp,objnr~Extra)
#cat("Kolla varför dubletter\n")
#b<-tot_temp[order(tot_temp$objnr),]
#head(b,30)
#c<-table(factor(tot_temp$objnr))
#d<-names(c[c>1])
#e<-ongoing_tot[ongoing_tot$objnr %in% d,]
#e<-e[order(e$objnr),]
#head(e,20)
### ADD FEATURES ####
X<-as.data.frame(rep(1,length(tot_temp$mil)))
X <- cbind(X,tot_temp$mil,tot_temp$år,as.numeric(as.character(tot_temp$capturedate.y))) #lägger till fullt datum
X <- cbind(X,mil_log=log(tot_temp$mil))
X <- cbind(X,as.numeric(substr(as.character(tot_temp$capturedate.y),5,6))) #lägger till månad
colnames(X) <- c("bias","mil","år","Date","mil_log","Month")
X <- cbind(X,Engine=tot_temp$Engine) #lägger motortyp Används i Random Forest
X <- cbind(X,Bränsle=tot_temp$bränsle) #lägger motortyp Används i Random Forest
X <- cbind(X,Package=as.character(tot_temp$Package)) #lägger motortyp Används i Random Forest
X <- cbind(X,Extra=as.character(tot_temp$Extra)) #lägger motortyp Används i Random Forest
X <- cbind(X,ort=as.character(tot_temp$ort)) #lägger motortyp Används i Random Forest
X <- cbind(X,AWD=as.character(tot_temp$AWD)) #lägger motortyp Används i Random Forest
#X <- cbind(X,listpris=tot_temp$listpris) #lägger motortyp Används i Random Forest
#X <- cbind(X,acast(tot_temp,objnr~Engine,value.var="Engine",fun.aggregate=length)) #Lägg till Motortyp
X <-cbind(X,winningbid=tot_temp$winningbid)
X$år <- as.numeric(as.character(X$år))
#y <- as.matrix(tot_temp$winningbid) #Bara när jag kör linjär regression med normal eq.
y <- tot_temp$winningbid
#X <- as.matrix(X)
#y <- y[!rowSums(!is.finite(X)),] #Ta svar  m NA
#tot_temp <- tot_temp[!rowSums(!is.finite(X)),] #Ta bort rader m NA
#X <- X[!rowSums(!is.finite(X)),] #Ta bort rader m NA
result <- data.frame()
mtry_test <- data.frame()
###### Evaluating Training ##############
for (J in seq(10,500,by=20)){
cvSamples<- sample(1:nrow(X),80,replace=FALSE)
cvSet <- X[cvSamples,]
cv_y <- y[cvSamples]
nonCvSet <- (1:nrow(X))[!(1:nrow(X) %in% cvSamples)]
#Note that I added a column with ones to X. The bias term
winningb.rt <- randomForest(winningbid~.,data=X,importance=TRUE)
summary(winningb.rt)
winningb.rt$mse
qplot(winningb.rt$mse)
plot(winningb.rt$mse)
qplot(winningb.rt$mse)
importance(winningb.rt)
summary(winningb.rt)
forest(winningb.rt)
winningb.rt$importance
winningb.rt$forest
summary(winningb.rt)
winningb.rt$importance
winningb.rt$importanceSD
importance(winningb.rt)
plot(winningb.rt$importanceSD)
plot(winningb.rt$importance)
p <- qplot(winningbid,Guess,data=tot_temp,geom ="point", color=Engine) + scale_x_continuous(labels=french) + scale_y_continuous(labels=french)
p <- p + geom_abline(aes(intercept = 0, slope = 1),size=I(0.5),color="grey30")
p <- p + geom_abline(aes(intercept = 10000, slope = 1),size=I(0.5),color="grey70")
p <- p + geom_abline(aes(intercept = -10000, slope = 1),size=I(0.5),color="grey70")
p <- p + facet_wrap(~ Engine,ncol=4)
p
error <- sum(diff^2)/(2*m)
p
diff <-(predict(winningb.rt,X)-y)
difflistpr <-(predict(winningb.rt,X)-tot_temp$listpris)
tot_temp<-cbind(tot_temp,Guess=predict(winningb.rt,X),Diff=diff)
#tot_temp<-cbind(tot_temp,Guess=X%*%theta,Diff=diff)
p <- qplot(winningbid,Guess,data=tot_temp,geom ="point", color=Engine) + scale_x_continuous(labels=french) + scale_y_continuous(labels=french)
p <- p + geom_abline(aes(intercept = 0, slope = 1),size=I(0.5),color="grey30")
p <- p + geom_abline(aes(intercept = 10000, slope = 1),size=I(0.5),color="grey70")
p <- p + geom_abline(aes(intercept = -10000, slope = 1),size=I(0.5),color="grey70")
p <- p + facet_wrap(~ Engine,ncol=4)
error <- sum(diff^2)/(2*m)
p
varImpPlot(winningb.rt)
setwd("~/Documents/Diverse/Coursera Exploratory Data Analysis/Course Project 2/")
setwd("~/Documents/Diverse/Coursera Reproducible Research/")
setwd("~/Documents/Diverse/Coursera Reproducible Research /Peer Assesment 1/Peeras1/RepData_PeerAssessment1/")
df <- read.csv("activity.csv")
summary(df)
df
str(df)
df$date.new <- as.date(df)
head(df)
table(df$interval)
unique(df$interval)
df$date.new <- strftime(df,format = %Y-%m-%d)
df$date.new <- strftime(df,format = "%Y-%m-%d")
df$date.new <- strftime(df$date,format = "%Y-%m-%d")
str(df)
df <- read.csv("activity.csv")
df$date.new <- strftime(as.character(df$date),format = "%Y-%m-%d")
summary(df)
df$date.new
str(df)
head(df$date)
head(character(df$date))
head(character(df$date))
df$date.new <- strptime(as.character(df$date),format = "%Y-%m-%d")
str(df)
df$date.new <- strptime(paste(as.character(df$date),df$interval),format = "%Y-%m-%d %H%M")
str(df)
paste(as.character(df$date),df$interval)
strptime(paste(as.character(df$date),df$interval),format = "%Y-%m-%d %H%M")
df <- read.csv("activity.csv")
df$date.new <- strptime(paste(as.character(df$date),df$interval),format = "%Y-%m-%d %H%M")
summary(df)
setwd("~/Documents/Diverse/Coursera Reproducible Research /Peer Assesment 1/Peeras1/RepData_PeerAssessment1/")
df <- data.table(read.csv("activity.csv")) #Read and convert to data.table
df$date.new <- strptime(paste(as.character(df$date),df$interval),format = "%Y-%m-%d %H%M")
summary(df)
library(data.table)
setwd("~/Documents/Diverse/Coursera Reproducible Research /Peer Assesment 1/Peeras1/RepData_PeerAssessment1/")
df <- data.table(read.csv("activity.csv")) #Read and convert to data.table
df$date.new <- strptime(paste(as.character(df$date),df$interval),format = "%Y-%m-%d %H%M")
summary(df)
summary(df)
head(df)
df <- data.table(read.csv("activity.csv")) #Read and convert to data.table
head(df)
df <- read.csv("activity.csv") #Read and convert to data.table
head(df)
data.table(
df <- data.table(read.csv("activity.csv")) #Read and convert to data.table
df <- data.table(read.csv("activity.csv")) #Read and convert to data.table
df$date.new <- strptime(paste(as.character(df$date),df$interval),format = "%Y-%m-%d %H%M")
df <- data.table(read.csv("activity.csv")) #Read and convert to data.table
head(df)
hist(strps)
hist/(df$steps,breaks = 300)
hist(df$steps,breaks = 300)
hist(df$steps,breaks = 100)
df
df$date.new <- strptime(paste(as.character(df$date),df$interval),format = "%Y-%m-%d %H%M")
head(df)
df <- read.csv("activity.csv") #Read and convert to data.table
df$date.new <- strptime(paste(as.character(df$date),df$interval),format = "%Y-%m-%d %H%M")
summary(df)
df <- data.table(df)
df$date.new <- strptime(paste(as.character(df$date),df$interval),format = "%Y-%m-%d %H%M")
df[,date.new:=strptime(paste(as.character(df$date),df$interval),format = "%Y-%m-%d %H%M")
df[,date.new:=strptime(paste(as.character(df$date),df$interval),format = "%Y-%m-%d %H%M")]
head(df)
df[,date.new:=strptime(paste(as.character(date),interval),format = "%Y-%m-%d %H%M")]
df[,date.new:=strptime(paste(as.character(date),interval),format = "%Y-%m-%d %H%M"),with=F]
library(data.table)
setwd("~/Documents/Diverse/Coursera Reproducible Research /Peer Assesment 1/Peeras1/RepData_PeerAssessment1/")
df <- read.csv("activity.csv") #Read and convert to data.table
df <- data.table(df)
df[,"date.new":=strptime(paste(as.character(date),interval),format = "%Y-%m-%d %H%M"),with=F]
head(df)
df$date.new <- strptime(paste(as.character(df$date),df$interval),format = "%Y-%m-%d %H%M")
setwd("~/Documents/Diverse/Coursera Reproducible Research /Peer Assesment 1/Peeras1/RepData_PeerAssessment1/")
df <- read.csv("activity.csv") #Read and convert to data.table
df$date.new <- strptime(paste(as.character(df$date),df$interval),format = "%Y-%m-%d %H%M")
head(df)
df <- read.csv("activity.csv") #Read and convert to data.table
df
paste(as.character(df$date),df$interval)
strptime(paste(as.character(df$date),df$interval),format = "%Y-%m-%d %H%M")
df$date.new <- strptime(paste(as.character(df$date),df$interval),format = "%Y-%m-%d %H%M")
head(df)
df$date.new <- strptime(paste(as.character(df$date),df$interval),format = "%Y-%m-%d %H%M")
head(df)
library(data.table)
setwd("~/Documents/Diverse/Coursera Reproducible Research /Peer Assesment 1/Peeras1/RepData_PeerAssessment1/")
df <- read.csv("activity.csv") #Read and convert to data.table
head(df)
df$date.new <- strptime(paste(as.character(df$date),df$interval),format = "%Y-%m-%d %H%M")
head(df)
paste(as.character(df$date),df$interval)
strptime(paste(as.character(df$date),df$interval),format = "%Y-%m-%d %H%M")
df$date.new <- strptime(paste(as.character(df$date),df$interval),format = "%Y-%m-%d %H%M")
head(df)
df$date.new <- strftime(paste(as.character(df$date),df$interval),format = "%Y-%m-%d %H%M")
head(df)
str(df)
strptime(paste(as.character(df$date),df$interval),format = "%Y-%m-%d %H%M")
class8df
class(df)
df$date.new <- strptime(paste(as.character(df$date),df$interval),format = "%Y-%m-%d %H%M")
head(df)
strptime(paste(as.character(df$date),df$interval),format = "%Y-%m-%d %H%M")
setwd("~/Documents/Diverse/Coursera Reproducible Research /Peer Assesment 1/Peeras1/RepData_PeerAssessment1/")
df <- read.csv("activity.csv") #Read and convert to data.table
df$date.new <- strptime(paste(as.character(df$date),df$interval),format = "%Y-%m-%d %H%M")
summary(df)
head(df)
str(df)
paste(as.character(df$date),df$interval)
strptime(paste(as.character(df$date),df$interval),format = "%Y-%m-%d %H%M")
df$date.new <- strptime(paste(as.character(df$date),df$interval),format = "%Y-%m-%d %H%M")
head(df)
with(df,table(interval,date.new))
with(df,table(interval,date.new))
table(df$date.new)
df$date.new
sprintf()
sprintf("%f", pi)
sprintf("%.3f", pi)
sprintf("%1.0f", pi)
sprintf("%5.1f", pi)
sprintf("%05.1f", pi)
sprintf("%+f", pi)
sprintf("% f", pi)
sprintf("%-10f", pi) # left justified
sprintf("%e", pi)
sprintf("%E", pi)
sprintf("%g", pi)
sprintf("%g",   1e6 * pi) # -> exponential
sprintf("%.9g", 1e6 * pi) # -> "fixed"
sprintf("%G", 1e-6 * pi)
sprintf("%05",pi)
sprintf("%05f",pi)
sprintf("%05.1f",pi)
sprintf("%05.2f",pi)
sprintf("%05.0f",pi)
sprintf("%04.0f",pi)
sprintf("%04.f",pi)
sprintf("%04f",pi)
sprintf("%04.f",pi)
df$date.new <- strptime(paste(as.character(df$date),sprintf("%04.f",df$interval)),format = "%Y-%m-%d %H%M")
df$date
head(df)
df <- data.table(df)
head(df)
setwd("~/Documents/Diverse/Coursera Reproducible Research /Peer Assesment 1/Peeras1/RepData_PeerAssessment1/")
df <- read.csv("activity.csv") #Read and convert to data.table
df$date.new <- strptime(paste(as.character(df$date),sprintf("%04.f",df$interval)),format = "%Y-%m-%d %H%M")
head(df)
str(df)
df <- data.table(df)
df
str(df)
head(df)
str(df)
str(df$date.new)
df.perday <- aggregate(date~steps,df)
df.perday <- aggregate(date~steps,df,mean)
head(df.perday)
df.perday <- aggregate(steps~~date,df,mean)
df.perday <- aggregate(steps~date,df,mean)
df.perday
unique(df$date)
tail(df)
df$date.new <- strptime(paste(as.character(df$date),sprintf("%04.f",df$interval)),format = "%Y-%m-%d %H%M")
df$date.new <- strptime(paste(as.character(df$date),sprintf("%04.f",df$interval)),format = "%Y-%m-%d %H%M")
setwd("~/Documents/Diverse/Coursera Reproducible Research /Peer Assesment 1/Peeras1/RepData_PeerAssessment1/")
df <- read.csv("activity.csv") #Read and convert to data.table
tail(df)
tail(df,100)
